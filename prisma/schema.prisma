generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["filteredRelationCount"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Choice {
  id             String           @id
  title          String
  image          String?
  questionId     String
  createdAt      DateTime         @default(now())
  Questions      Questions        @relation(fields: [questionId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  QuestionAnswer QuestionAnswer[]
}

model Exam {
  id                String      @id
  name              String      @unique
  numberOfQuestions Int         @default(0)
  duration          Float       @default(0)
  examGroupId       String
  createdAt         DateTime    @default(now())
  ExamGroup         ExamGroup   @relation(fields: [examGroupId], references: [id], onUpdate: NoAction)
  Questions         Questions[]
}

model ExamGroup {
  id        String    @id
  name      String    @unique
  createdAt DateTime? @default(now()) @db.Timestamp(6)
  Exam      Exam[]
}

model QuestionAnswer {
  id         String    @id
  questionId String    @unique
  choiceId   String
  createdAt  DateTime  @default(now())
  Choice     Choice    @relation(fields: [choiceId], references: [id], onUpdate: NoAction)
  Questions  Questions @relation(fields: [questionId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Questions {
  id             String          @id
  title          String
  image          String?
  examId         String?
  createdAt      DateTime        @default(now())
  Choice         Choice[]
  QuestionAnswer QuestionAnswer?
  Exam           Exam?           @relation(fields: [examId], references: [id], onUpdate: NoAction)
}

enum ExamStatus {
  generated
  published
  gradeReleased
}

enum QuestionStatus {
  draft
  waiting
  approved
  rejected
  selected
}
